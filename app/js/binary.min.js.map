{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/config.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_minus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_plus.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/time_picker.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/toggle_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty_portfolio_message.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/index.js","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/outdated_browser.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer_card.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/allow_equals.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/duration.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker_input.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_panel.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/index.js","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/range_slider.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/tick_steps.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number_selector.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/start_date.jsx","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close_button.jsx","webpack:///./src/javascript/app_2/App/Containers/toast_message.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_quick_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_portfolio.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/upgrade_button.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install_pwa_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar_div.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Containers/Layout/theme_wrapper.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register_service_worker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","binary.min","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","404","account_password","api_toke","authorized_application","cashier_password","contract","financial_assessment","limits","login_history","personal_details","portfolio","self_exclusion","settings","statement","vendors~smart_chart","smart_chart","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_mobxReact","SPECIAL_REACT_KEYS","children","ref","MobxProvider","Provider","stores","baseStores","this","context","mobxStores","props","store","_extends","childContextTypes","PropTypes","client","common","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_ref","_temp2","_this2","_classCallCheck","_len","arguments","args","Array","_key2","_possibleConstructorReturn","__proto__","getPrototypeOf","concat","propTypes","_inherits","_createClass","React","wrappedDisplayName","displayName","constructor","keys","_date_time","forEach","_logout","BinarySocketGeneral","WS","_icon_arrow","_icon_back","_icon_close","_icon_exclamation","_icon_minus","_icon_plus","Button","_ref$className","className","has_effect","id","is_disabled","onClick","text","wrapperClassName","classes","button","_react2","default","disabled","wrapper","string","bool","func","_mobx","_utility","_config","BaseStore","action","bound","options","_initDefineProp","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","root_store","local_storage_properties","session_storage_properties","validation_rules","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_defineProperty","_this","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this3","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","validation_errors","_this4","rules","addRule","_this5","intercept","change","validateProperty","newValue","_this6","trigger","inputs","validator","Validator","isPassed","setValidationErrorMessages","errors","_this7","listener","_this8","when","switch_broadcast","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","then","switchEndSignal","onSwitchAccount","t0","isProduction","stop","disposeSwitchAccount","freeze","observable","_icon_bell","_icon_cashier","_icon_hamburger","_icon_portfolio","_icon_statement","_icon_trade","domain_app_ids","binary.com","binary.me","getCurrentBinaryDomain","find","domain","RegExp","test","location","hostname","all_domains","replace","join","getAppId","app_id","config_app_id","is_new_app","pathname","href","removeItem","isBinaryApp","getSocketURL","server_url","loginid","is_real","_localize","_Services","_Date","_barrier","_duration","_start_date","_contract","ContractType","available_contract_types","available_categories","contract_types","buildTradeTypesConfig","trade_types","contract_type","contract_display","getArrayDefaultValue","arr_new_values","indexOf","getComponents","c_type","form_components","_toConsumableArray","components","getDurationUnitsList","contract_start_type","duration_units_list","getPropertyValue","getDurationUnit","duration_unit","arr_units","obj","getDurationMinMax","contract_expiry_type","duration_min_max","getStartType","start_date","Number","getStartDates","current_start_date","config","start_dates_list","has_spot","localize","forward_starting_dates","item","hours","a","minutes","getValidTime","sessions","compare_moment","start_moment","isSessionAvailable","minute","format","hour","h","buildMoment","date","time","moment_date","toMoment","isTimeValid","_time$split","split","_time$split2","_slicedToArray","getTradeTypes","getBarriers","expiry_type","barriers","barrier_values","barrier_1","barrier","high_barrier","barrier_2","low_barrier","barrier_count","count","toString","getBasis","basis","arr_basis","localized_basis","getLocalizedBasis","basis_list","cur","bas","buildContractTypesConfig","symbol","contractsFor","contract_categories","getContractCategoriesConfig","getContractTypesConfig","cloneObject","contracts_for","available","sub_cats","title","start_type","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","filter","_typeof","getContractType","list","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_unit","obj_duration_units_list","obj_duration_units_min_max","getFullContractTypes","getExpiryDate","expiry_date","moment_start","moment_expiry","is_invalid","isBefore","isAfter","clone","add","getExpiryTime","start_time","expiry_time","end_moment","end_time","isSameOrBefore","is_end_of_day","is_end_of_session","getSessions","option","getStartTime","getContractCategories","contract_types_list","Tooltip","message","alignment","icon","icon_name","icon_class","_classnames2","data-tooltip","data-tooltip-pos","node","_currency_base","Money","amount","_ref$currency","currency","has_sign","_ref$is_formatted","is_formatted","sign","abs_value","Math","abs","final_amount","formatMoney","Fragment","toLowerCase","oneOfType","number","Fieldset","header","is_center","onMouseEnter","onMouseLeave","tooltip","fieldset_class","field_left_class","_tooltip2","array","error404","apps","exclusion","financial","history","index","personal","root","token","trade","UILoader","loading_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","InputField","checked","error_messages","fractional_digits","helper","is_float","is_incrementable","_ref$is_read_only","is_read_only","_ref$is_signed","is_signed","label","max_length","max_value","min_value","onChange","placeholder","prefix","required","has_error","has_valid_length","max_is_disabled","min_is_disabled","incrementValue","decrementValue","input","data-for","data-tip","maxLength","onKeyDown","keyCode","is_empty","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","readOnly","input_increment","_button2","IconPlus","IconMinus","htmlFor","MobxPropTypes","arrayOrObservableArray","_fill_template","Localize","str","replacers","localized","fillTemplate","GTM","GTMBase","pushPurchaseData","contract_data","bom_ui","barrier1","barrier2","buy_price","date_expiry","date_start","duration","payout","theme","is_dark_mode_on","portfolio_drawer","is_portfolio_drawer_on","purchase_confirm","is_purchase_confirm_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","granularity","pushDataLayer","getDurationMaps","display","order","to_second","convertDurationUnit","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","min","unit","max","duration_maps","u","sort","b","from_unit","to_unit","isNaN","parseInt","duration_string","match","getExpiryType","server_time","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","day","CalendarPanelTypes","calendar_date","calendar_view","date_format","isPeriodDisabled","max_date","min_date","selected_date","_drawer_header","_drawer_item","_drawer_items","_drawer","_drawer_toggle","_toggle_drawer","_reactRouter","normalizePath","path","findRouteByPath","routes_config","some","route_info","matchPath","routes","isRouteVisible","route","is_logged_in","is_authenticated","getPath","route_path","params","getContractPath","contract_id","_helpers","BinaryLink","ButtonLink","RouteWithSubRoutes","activeSymbols","BinarySocket","send","active_symbols","buy","proposal_id","price","getAccountStatus","get_account_status","getSelfExclusion","get_self_exclusion","getSettings","get_settings","landingCompany","residence","landing_company","logout","mt5LoginList","mt5_login_list","oauthApps","oauth_apps","payoutCurrencies","payout_currencies","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","forget","msg_type","cb","match_values","SubscriptionManager","forgetAll","_subscription_manager2","subscribeBalance","subscribe","balance","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","subscribeWebsiteStatus","website_status","CONTRACT_SHADES","CALL","PUT","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","DEFAULT_SHADES","1","2","BARRIER_COLORS","GREEN","RED","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","IconFlag","xmlns","width","height","fillRule","color","getContractTypeDisplay","ASIANU","ASIAND","CALLE","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","getChartConfig","contract_info","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","getFinalPrice","getDisplayStatus","status","isEnded","profit","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","exit_tick_time","sell_price","bid_price","getIndicativePrice","is_expired","is_settleable","isUserSold","isSoldBeforeStart","sell_time","isStarted","is_forward_starting","current_spot_time","isValidToSell","is_valid_to_sell","isBeforeDate","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","open","close","should_only_check_hour","now_moment","second","unix","session","isBetween","_icon_trade_types","_icon_maximize","_icon_quick_portfolio","_icon_settings","_ui","_connect","RemainingTime","_ref$end_time","remaining_time","formatDuration","getDiffDuration","isRequired","_ref2","_storage","requestLogout","doLogout","response","removeCookies","Client","clearAllAccounts","set","SocketCache","clear","reload","_language","isDigitContract","getDigitInfo","digits_info","entry_tick_time","entry","createDigitInfo","entry_tick","spot_time","exit_time","current","current_spot","spot","digit","is_win","isWin","is_last","win_checker","_barriers","isBarrierSupported","barriersToString","is_relative","barriers_list","_key","barriersObjectToArray","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","proposal_properties_alternative_names","is_digit","removable_proposal_properties","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","IconClose","_reactRouterDom","to","_objectWithoutProperties","_routes_config2","NavLink","activeClassName","exact","_react","_Constants","_NavBar","ContractDetails","lazy","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","route_default","component","Redirect","icon_component","IconPortfolio","IconStatement","Trade","Contract","is_mobile","_contract_type_widget2","_icon_trade_categories","_Common","FullScreenDialog","visible","body","classList","getElementById","remove","fullscreen-dialog--open","tagName","scrollToTarget","parent","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","_PopConfirm","Purchase","is_client_allowed_to_visit","is_purchase_enabled","is_purchase_locked","is_trade_enabled","onClickPurchase","onHoverPurchase","togglePurchaseLock","resetPurchase","proposal_info","purchase_info","idx","info","purchase_button","stake","is_purchase_error","echo_req","_fieldset2","_PurchaseLock2","_MessageBox2","_ui_loader2","_contract_info2","contract_title","PopConfirm","cancel_text","confirm_text","onPurchase","requestProposal","is_purchase_lock_on","PopConfirmElement","is_visible","onConfirm","wrapperRef","popconfirm_class","IconExclamation","_component","TradeParams","component_name","includes","isVisible","is_minimized","is_nativepicker","getComponentProperties","trade_store","client_store","renderCards","_ref3","CalendarButton","is_hidden","TimePickerDropdown","selectOption","_this$props$value$spl","_this$props$value$spl2","prev_hour","prev_minute","is_type_selected","setState","last_updated_type","stopPropagation","resetValues","state","is_hour_selected","is_minute_selected","prevProps","prevState","_state","toggle","_props","preClass","start_moment_clone","_value$split","_value$split2","is_clearable","saveHourRef","is_enabled","saveMinuteRef","mm","TimePicker","toggleDropDown","is_open","handleChange","arg","saveRef","nodeName","wrapper_ref","target_element","handleClickOutside","contains","_props2","is_align_right","padding","prefix_class","_input_field2","value_split","InfoBoxExpired","_ref$has_flag","has_flag","_ref$has_percentage","has_percentage","_ref$sell_info","sell_info","profit_percentage","percentage_text","transaction_id","_sell_info2","_icon_flag2","_money2","_constants","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","_tabs_item","TabsWrapper","getSizes","rootBounds","sizes","els","bounds","left","right","getUnderlineStyle","active","size","transition","PureComponent","TabsItem","elements","style","toggleDialog","Children","child","tab_class","tab--active","SettingsControl","to_toggle","_toggle_button2","toggled","ToggleButton","toggle_style","_icon_logout","InkBar","inkbar_style","_login","_app_config","Route","render","_login_prompt2","IconComponent","onLogin","redirectToLogin","default_title","DrawerHeader","closeBtn","drawer_header_class","_Routes","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","custom_action","drawer_item_component","_reactTransitionGroup","Drawer","is_this_drawer_on","setRef","hide","scrollToggle","drawer_bg_class","show","drawer_class","CSSTransition","in","classNames","unmountOnExit","is_main_drawer_on","is_notifications_drawer_on","footer","icon_link","drawer_component","_Types","ContractTypeCell","IconTradeType","onMount","onUnmount","_props$contract_info","longcode","transaction_ids","_details_header2","display_status","_details_contents2","buy_id","details_expiry","details_info","Link","onClickNewTrade","_Errors2","error_message","_digits","_logic","_InfoBox","InfoBox","is_trade_page","removeError","is_ended","box_class","ended","Contents","InfoBoxGeneral","InfoBoxDigit","_contract_error2","onClickClose","removeSellError","_check_new_release","check_new_release","checkNewRelease","_pwa2","_app2","./ja","./ja.js","webpackContext","webpackContextResolve","code","_reactDom","configure","enforceActions","init","setStorageEvents","RootStore","NetworkMonitor","OutdatedBrowser","app","_index","common_store","updateStore","is_online","network_status","is_network_online","NetworkMonitorBase","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","ResponseHandlers","websiteStatus","ServerTime","onMessage","handleError","is_active_tab","State","authorize","responseAuthorize","setResidence","country","accounts","is_virtual","sendBuffered","accepted_bch","country_code","setEmail","email","responsePayoutCurrencies","pushTransactionData","setError","setBalance","flow","wait","is_available","site_status","availability","setCurrencies","showError","1_2","rel","querySelector","$buoop","vs","f","api","url","noclose","reminder","onshow","nomessage","insecure","ClientStore","CommonStore","ModulesStore","UIStore","_client_base","_currency","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","landing_companies","canUpgrade","can_upgrade","currencies_list","buildCurrenciesList","selectCurrency","session_start","_moment2","valueOf","landing_company_name","updateAccountList","account_list","account","excluded_until","param","param_to_set","value_to_set","switched","getObject","upgrade_info","getBasicUpgradeInfo","registerReactions","getAccount","account_type","getAccountTitle","all_loginids","addToastMessage","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","values","default_currency","valid_login_ids_regex","every","acc","computed","_declarative_validation_rules","error_count","attribute","rule","getPreBuildDVRs","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","is_rule_string","rule_object","_string_util","validRequired","String","validEmail","validPassword","field","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","val","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","addComma","format_money","getDecimalPlaces","isMoreThanMax","compareBigUnsignedInt","pre_build_dvrs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","getPasswordLengthConfig","Errors","has","fiat","crypto","isCryptocurrency","getDefaultCurrency","supported_currencies","_Language","is_socket_opened","moment","utc","currentLanguage","getAllowedLanguages","exclude_languages","getAll","getURL","lang","urlFor","ContractStore","PortfolioStore","SmartChartStore","StatementStore","TradeStore","_chart_barriers","_chart_markers","_details","chart_config","accountSwitcherListener","setContractMode","updateProposal","forgetProposalOpenContract","is_sell_requested","removeBarriers","removeMarkers","createChartBarrier","createChartMarkers","handleDigits","extendObservable","handleSell","proposal_response","sold_for","getDetailsExpiry","getDetailsInfo","createBarriers","line_style","not_draggable","updateBarrierShade","_markers","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerConfig","_marker_creators","LINE_PURCHASE","purchase_time","LINE_START","SPOT_ENTRY","is_sold_before_start","spot_value","SPOT_EXIT","end_spot_time","end_spot","x","y","content_config","_extend2","MARKER_X_POSITIONER","MARKER_Y_POSITIONER","MARKER_CONTENT_TYPES","LINE","ContentComponent","MarkerLine","xPositioner","yPositioner","SPOT","MarkerSpot","align","_icon_entry_spot2","IconEntrySpot","oneOf","detailsProps","details_props","entry_spot","purchase_price","exit_spot","exit_spot_time","txt_start_time","toGMTFormat","txt_entry_spot","indicative_price","is_user_sold","epochToMoment","epoch","isValid","isUTC","moment_obj","convertToUnix","setTime","formatDate","daysFromTodayTo","diff","asDays","seconds","formatted_str","time_str","isHourValid","isMinuteValid","isDateValid","date_str","_format_response","is_loading","contracts","pos","formatPortfolioPosition","pos1","pos2","reference","_response$transaction","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","portfolio_position","position","prev_indicative","indicative","new_indicative","underlying","display_name","unshift","findIndex","initializePortfolio","clearTable","purchase","portfolio_pos","server_epoch","active_positions","portfolioHandler","transactionHandler","parseFloat","details","_chart_barrier_store","_chart_marker_store","_chart","_descriptor8","_descriptor9","wsSubscribe","callback","wsForget","wsSendRequest","timePromise","tick_chart_types","is_contract_mode","is_title_enabled","main","updateBarriers","should_display","_extend3","ChartMarkerStore","assetInformation","countdown","is_chart_countdown_visible","current_language","onChartBarrierChange","main_barrier","ChartBarrierStore","_barriers2","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","has_loaded_all","date_from","date_to","subtract","statementHandler","formatted_transactions","transactions","formatStatementTransaction","fetchNextBatch","_event$target","scrollHeight","clearDateFilter","transaction_time","balance_after","toTitleCase","action_type","refid","desc","_purchase","_query_string","_process","_proposal","_symbol2","URLHelper","pruneQueryString","_validation_rules2","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","chart_id","debouncedProposal","_lodash2","proposal_requests","_descriptor33","changeDurationValidationRules","changeAllowEquals","delay","query_string_values","updateQueryString","setQueryParam","pickDefaultSymbol","processNewValuesAsync","_e$target","is_equal_checked","is_over","processPurchase","preventDefault","new_state","is_trade_component_mounted","obj_new_values","is_changed_by_user","getMinPayout","onChangeSymbolAsync","processTradeParams","is_query_string_applied","validateAllProperties","requests","createProposalRequests","proper_proposal_params_for_query_string","getProposalParametersName","onProposalResponse","getProposalInfo","setChartBarrier","query_params","duration_options","hasCallPutEqual","check_callput_equal_duration","contract_type_list","contract_duration_list","rise_fall_equal","hasDurationForCallPutEqual","is_allow_equal","_ref6","_callee4","_context4","refresh","prepareTradeStore","abrupt","_x3","runInAction","_callee6","_context6","_this9","query_string","URL","search","URLSearchParams","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","_x","_x2","multiplier","rise_fall","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","_proposal_response$ec","Duration","StartDate","getMethodsList","fnc","extendOrReplace","ContractTypeHelper","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","source","new_values","obj_barriers","obj_contract_start_type","obj_sessions","obj_start_time","obj_expiry_date","obj_expiry_time","obj_duration_min_max","createProposalRequestForContract","ask_price","returns","toFixed","display_value","new_req","current_req","isDeepEqual","type_of_contract","obj_expiry","isSame","last_digit","proper_param_name","toUpperCase","alternative_name","symbol_info","submarket","handleResize","autorun","screen_width","innerWidth","is_accounts_switcher_on","is_settings_dialog_on","is_language_dialog_on","is_install_button_visible","pwa_prompt_event","toast_message","toast_messages","evt","hidden","is_logging_in","_ToastMessage","App","BrowserRouter","basename","_base_name2","_theme_wrapper2","_header2","_error_boundary2","_app_contents2","_routes2","_PortfolioDrawer2","_toast_message2","_DenialOfServiceModal2","_footer2","regex_string","exec","ErrorBoundary","componentDidCatch","hasError","PortfolioDrawer","toggleDrawer","body_content","_empty_portfolio_message2","_portfolio_drawer_card2","portfolio-drawer--open","_simplebarReact2","togglePortfolioDrawer","IconArrow","IconBack","transform","IconBell","stroke","IconCashier","rx","IconHamburger","strokeLinecap","IconTrade","PortfolioDrawerCard","_binary_link2","_contract_type_cell2","_remaining_time2","IconType","SmartChart","form_wrapper_class","Suspense","fallback","_info_box2","onSymbolChange","updateChartType","updateGranularity","_test2","_form_layout2","is_contract_visible","_contract_details2","Test","setVisibility","stateVisibility","styles","container","fontSize","lineHeight","zIndex","background","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","entries","v","_ref4","FormLayout","_screen_small2","_screen_large2","ScreenLarge","sidebar-items__slideout","_contract_type2","_trade_params2","_purchase2","_Categories","ContractTypeWidget","handleSelect","handleVisibility","setWrapperRef","is_dialog_open","getDisplayText","_this$props","findInArray","getStyles","container_classes","tabIndex","IconTradeCategory","category","_contract_type_dialog2","_contract_type_list2","IconCategory","ContractTypeDialog","_full_screen_dialog2","element","ContractTypeList","_contract_type_item2","objectOrObservableObject","ContractTypeItem","_popconfirm","_popconfirm_element","handleClose","handleOpen","popconfirm_element","cloneElement","ContractInfo","icon_type","_Templates","MessageBox","ErrorComponent","ErrorLogin","ErrorBalance","ErrorGeneral","_purchase_result2","PurchaseResult","_error_balance","_error_general","_error_login","_icon_lock","PurchaseLock","IconLock","Barrier","LastDigit","Amount","is_single_currency","amount_container_class","three-columns","_DropDown2","_allow_equals2","observableObject","Dropdown","onKeyPressed","getItemFromValue","getValueFromIndex","curr_index","is_list_visible","prev_index","getPrevIndex","next_index","getNextIndex","char","firstChars","isArrayLike","Items","highlightedIdx","items","AllowEquals","expiry_list","now_date","max_date_duration","min_date_expiry","min_day","max_day","start_date_time","max_duration","min_duration","moment_now","new_min_day","new_max_day","moment_today","startOf","is_same_day","date_time","_start_time$split","_start_time$split2","moment_start_date_time","duration_unit_text","has_end_time","expiry","pop","endtime_container_class","has-time","_RangeSlider2","_DatePicker2","has_today_btn","_time_picker2","DatePicker","is_datepicker_visible","is_close_btn_visible","onClickOutside","mainNode","updateDatePickerValue","onSelectCalendar","onChangeInput","clearDatePickerInput","calendar","resetCalendar","new_date","current_date","_this$props2","nativeEvent","defaultValue","_date_picker_input2","class_name","_Calendar2","onSelect","defaultProps","Calendar","DatePickerInput","_initialiseProps","_calendar_header2","navigators","calendarViews","_calendar_panel2","panelSelectors","_calendar_footer2","setToday","nextMonth","navigateTo","previousMonth","nextYear","previousYear","nextDecade","previousDecade","nextCentury","previousCentury","updateSelectedDate","month","updateSelected","year","decade","is_add","_props3","dataset","is_before","is_after","formatted_date","_props4","default_date","_props5","now","_props6","start_of_period","endOf","CalendarFooter","_calendar_button2","role","CalendarHeader","is_date_view","is_month_view","is_year_view","is_decade_view","CalendarPanel","_panels","calendar_panel","CalendarDays","CalendarMonths","CalendarYears","CalendarDecades","_calendar_days","_calendar_months","_calendar_years","_calendar_decades","week_headers","days","dates","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","first_day","last_day","moment_min_date","moment_max_date","moment_selected","padLeft","moment_start_date","is_active","is_today","today","data-date","getDays","selected_month","month_headers","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","data-month","selected_year","current_year","years","data-year","decades","min_year","max_year","range","_range$split","_range$split2","start_year","end_year","data-decade","RangeSlider","first_tick","is_error","steps","_tick_steps2","TickSteps","arr_ticks","ticks__step--active","ticks__step--marked","arr_five","_number_selector2","arr_arr_numbers","selected_number","NumberSelector","getAttribute","arr_numbers","data-value","arrayOf","current_date_config","getOwnPropertyNames","prop","getPropFromStores","_len2","ScreenSmall","_mobile_widget2","MobileWidget","handleDialogClose","handleWidgetClick","DetailsContents","_details_group2","DetailsGroup","DetailsHeader","header_config","getHeaderConfig","title_purchased","purchased","title_result","icon_purchased","icon_result","_icon_tick2","won","lost","IconTick","circle_color","tick_color","msg","_localize3","_icon_error2","shape","convertObjectToReactElement","other_props","open_tag_id","tag","tag_id","before","pair_code","isValidElement","arr","last","ContractError","_ref$message","digits_array","tick_count","latest_digit","display_array","last_item","_digit_display2","digit_info","digit_number","_info_box_expired2","DigitDisplay","_ref$digit_info","digit_class","SellInfo","is_started","_contract_sell2","onClickSell","ContractSell","_sell_button2","SellButton","sell_message","validation_error","Toast","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","_close_button2","CloseButton","ToastMessage","toast","_ToastMessage2","AppContents","app-contents--show-portfolio-drawer","ProptTypes","withRouter","_Footer","Footer","is_language_dialog_visible","toggleSettingsDialog","NetworkStatus","_server_time2","TogglePortfolio","ToggleFullScreen","ToggleSettings","is_settings_visible","is_language_visible","toggleSettings","gmt_time","_network_status","_toggle_fullscreen","_toggle_portfolio","_toggle_settings","class","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","documentElement","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","IconMaximize","IconQuickPortfolio","IconSettings","toggle_portfolio_class","toggle_settings_class","_settings_dialog2","_Tabs","_SettingsDialog","SettingsDialog","footer_settings_btn","settings_dialog_class","settings_dialog_container_class","Tabs","settings_content","LanguageSettings","content","GeneralSettings","ChartSettings","_tabs","_tabs_wrapper","active_tab_index","setActiveTab","TabContents","tab_container_class","tab_header_class","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","_settings_control2","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","is_dark_mode","is_purchase_confirmed","showLanguage","toggleDarkMode","togglePurchaseConfirmation","showLanguageDialog","is_settings_on","_language_dialog2","hideLanguageDialog","LanguageDialog","language_dialog_class","_Header","Header","hideInstallButton","is_acc_switcher_on","onClickUpgrade","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","log","ToggleMenuDrawer","MenuLinks","header_links","InstallPWAButton","prompt_event","AccountInfo","is_upgrade_enabled","is_dialog_on","LoginButton","ToggleNotificationsDrawer","account_title","_account_info","_install_pwa_button","_login_button","_menu_links","_toggle_menu_drawer","_toggle_notifications_drawer","_AccountSwitcher","_localize2","AccountSwitcher","_account_switcher","_upgrade_button","_Drawer","accounts_toggle_btn","doSwitch","UpgradeButton","IconLogout","account_switcher","prompt","userChoice","choice_result","outcome","_InkBar2","_inkbar","InkBarDiv","updateInkbarPosition","closest","clearInkBar","offsetLeft","offsetWidth","active_el","Switch","_route_with_sub_routes2","LoginPrompt","onSignup","3_2","website_name","ToggleDrawer","_menu_drawer2","DrawerItems","is_collapsed","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","_Drawer2","MenuDrawer","_Notifications","Notifications","_notifications","ThemeWrapper","is_dark_theme","theme_wrapper_class","dark","light","Routes","_Routes2","virtual_account_loginid","onCancel","DenialOfServiceModal","_full_page_modal2","confirm_button_text","cancel_button_text","denial_of_service","FullPageModal","unregister","navigator","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready"],"mappings":"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","file":"binary.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary.min\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"f5ca3ae9e59585ca22e4\",\"account_password\":\"9f68c86a7fc5e50dae8c\",\"api_toke\":\"bbf61cc0f5c984769ae8\",\"authorized_application\":\"54255bbf87429dad43e1\",\"cashier_password\":\"a740ceeec074bb92778a\",\"contract\":\"9b883ecc161990fe06a4\",\"financial_assessment\":\"6c262c0454c38e6c555f\",\"limits\":\"18e9a5c398604682cfa2\",\"login_history\":\"dd3c95b2066f9741df3a\",\"personal_details\":\"5c422d30de48c52a86fc\",\"portfolio\":\"f5ff7adf790102c6c0ee\",\"self_exclusion\":\"b1f96e598ada8ef9f6d6\",\"settings\":\"da5d18874a17278bba7f\",\"statement\":\"cba0a1f17a0905f88bde\",\"vendors~smart_chart\":\"34c0819037322be82a00\",\"smart_chart\":\"708f58052552fb6b41e3\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([281,\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export * from './date_time';\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\nexport * from './icon_minus.jsx';\nexport * from './icon_plus.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = `btn${has_effect ? ' effect' : ''} ${className}`;\n    const button = (\n        <button id={id} className={classes} onClick={onClick || undefined} disabled={is_disabled}>\n            <span>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.object,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.constructor.name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.constructor.name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.constructor.name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.constructor.name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n","import { localize }              from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }           from '_common/utility';\nimport { WS }                    from 'Services';\nimport { isTimeValid, toMoment } from 'Utils/Date';\nimport { buildBarriersConfig }   from './barrier';\nimport { buildDurationConfig }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }         from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }          from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const moment_date = toMoment(date);\n        if (!time || !isTimeValid(time)) return moment_date;\n        const [ hour, minute ] = time.split(':');\n        return moment_date.hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getExpiryDate = (expiry_date, start_date, expiry_type) => {\n        const moment_start  = toMoment(start_date);\n        const moment_expiry = toMoment(expiry_date);\n        // forward starting contracts should only show today and tomorrow as expiry date\n        const is_invalid = moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n        return {\n            expiry_date: expiry_type === 'endtime' ? (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD') : null,\n        };\n    };\n\n    // has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is after start time\n    const getExpiryTime = (sessions, start_date, start_time, expiry_date, expiry_time) => {\n        const start_moment = start_date ? buildMoment(start_date, start_time) : toMoment();\n        const end_moment   = buildMoment(expiry_date, expiry_time);\n\n        let end_time = expiry_time;\n        if (sessions && !isSessionAvailable(sessions, end_moment)) {\n            end_time = getValidTime(sessions, end_moment, start_moment);\n        }\n        if (end_moment.isSameOrBefore(start_moment)) {\n            const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n            const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n            end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n        }\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getSessions,\n        getStartTime,\n        getStartType,\n\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    message,\n    alignment,\n    children,\n    icon, // only question or info accepted\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className='tooltip' data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={icon_class} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.node,\n    icon     : PropTypes.string,\n    message  : PropTypes.string,\n};\n\nexport default Tooltip;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={`symbols ${currency.toLowerCase()}`} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Tooltip    from '../Elements/tooltip.jsx';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    icon,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n}) => {\n    const fieldset_class   = classNames('fieldset-header', is_center ? 'center-text' : '');\n    const field_left_class = classNames('field-info', { icon }, icon, is_center ? 'center' : 'left');\n\n    return (\n        <fieldset className={className}  onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_class}>\n                    <span className={field_left_class}>{header}</span>\n                </div>\n            }\n            {!!tooltip &&\n                <span className='field-info right'>\n                    <Tooltip\n                        alignment='left'\n                        icon='info'\n                        message={tooltip || 'Message goes here.'}\n                    />\n                </span>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    icon        : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    tooltip     : PropTypes.string,\n};\n\nexport default Fieldset;\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className }) => {\n    const loading_class = classNames('loading', className);\n    return (\n        <div className='block-ui'>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default UILoader;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { IconMinus }             from 'Assets/Common/icon_minus.jsx'; // implicit import here { IconMinus, IconPlus } from 'Assets/Common' breaks compilation\nimport { IconPlus }              from 'Assets/Common/icon_plus.jsx';\nimport Button                    from './button.jsx';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    checked,\n    className,\n    error_messages,\n    fractional_digits,\n    helper,\n    id,\n    is_disabled,\n    is_float,\n    is_incrementable,\n    is_read_only = false,\n    is_signed = false,\n    label,\n    max_length,\n    max_value,\n    min_value,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n    const max_is_disabled = max_value && +value >= +max_value;\n    const min_is_disabled = min_value && +value <= +min_value;\n\n    const changeValue = (e) => {\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '';\n            const signed_regex = is_signed ? '(?!^([-+]0)$|^[-+]?$)^[+-]?' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const incrementValue = () => {\n        if  (max_is_disabled) return;\n\n        const increment_value = (+value) + 1;\n        onChange({ target: { value: increment_value, name } });\n    };\n\n    const decrementValue = () => {\n        if (!value || min_is_disabled) return;\n\n        const decrement_value = (+value) - 1;\n        onChange({ target: { value: decrement_value, name } });\n    };\n\n    const onKeyPressed = (e) => {\n        if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n        if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n    };\n\n    const input =\n        <input\n            checked={checked ? 'checked' : ''}\n            className={classNames({ error: has_error })}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-tip\n            id={id}\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onKeyDown={is_incrementable ? onKeyPressed : undefined}\n            onChange={changeValue}\n            onClick={onClick}\n            placeholder={placeholder || undefined}\n            readOnly={is_read_only}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={value || ''}\n        />;\n\n    const input_increment =\n        <div className='input-wrapper'>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--increment'}\n                is_disabled={max_is_disabled}\n                onClick={incrementValue}\n            >\n                <IconPlus className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n            </Button>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--decrement'}\n                is_disabled={min_is_disabled}\n                onClick={decrementValue}\n            >\n                <IconMinus className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n            </Button>\n            { input }\n        </div>;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <i><span className={`symbols ${prefix.toLowerCase()}`} /></i>\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                {is_incrementable  &&  type === 'number' ? input_increment : input}\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked          : PropTypes.number,\n    className        : PropTypes.string,\n    error_messages   : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits: PropTypes.number,\n    helper           : PropTypes.string,\n    id               : PropTypes.string,\n    is_disabled      : PropTypes.string,\n    is_float         : PropTypes.bool,\n    is_incrementable : PropTypes.bool,\n    is_read_only     : PropTypes.bool,\n    is_signed        : PropTypes.bool,\n    label            : PropTypes.string,\n    max_length       : PropTypes.number,\n    name             : PropTypes.string,\n    onChange         : PropTypes.func,\n    onClick          : PropTypes.func,\n    placeholder      : PropTypes.string,\n    prefix           : PropTypes.string,\n    required         : PropTypes.bool,\n    type             : PropTypes.string,\n    value            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                portfolio_drawer: root_store.ui.is_portfolio_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && toMoment(expiry_date).isAfter(toMoment(server_time), 'day');\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n","import PropTypes from 'prop-types';\n\nexport const CalendarPanelTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    date_format     : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    max_date        : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onClick      : PropTypes.object,\n    selected_date: PropTypes.string,\n};\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary_link.jsx';\nexport ButtonLink         from './button_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(),\n    start_moment           = toMoment(),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, undefined, should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(should_only_check_hour ? session.open.clone().minute(0) : session.open, session.close, null, '[]')))\n);\n","export * from './icon_trade_types.jsx';\n","export default from './dropdown.jsx';\n","export * from './icon_maximize.jsx';\nexport * from './icon_quick_portfolio.jsx';\nexport * from './icon_settings.jsx';\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","export default from './error_component.jsx';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","export * from './language';\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import ContractType from '../Helpers/contract_type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'is_equal_checked',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type } = store;\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinus = ({ className, is_disabled }) => (\n    <svg className={classNames(className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M3 7.5h10v1H3z' />\n    </svg>\n);\n\nIconMinus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconMinus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPlus = ({ className, is_disabled }) => (\n    <svg className={classNames(className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M8.5 7.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3h1v4.5z' />\n    </svg>\n\n);\n\nIconPlus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconPlus };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account_password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api_token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized_applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier_password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial_assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login_history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal_details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self_exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routes_config;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    routes_config.push(route_default);\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","export * from './icon_trade_categories.jsx';\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className='contracts-modal-list'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children: PropTypes.any,\n    onClose : PropTypes.func,\n    title   : PropTypes.string,\n    visible : PropTypes.bool,\n};\n\nexport default FullScreenDialog;\n","import PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from '_common/localize';\nimport { isEmptyObject }          from '_common/utility';\nimport { PopConfirm }             from 'App/Components/Elements/PopConfirm';\nimport UILoader                   from 'App/Components/Elements/ui_loader.jsx';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Fieldset                   from 'App/Components/Form/fieldset.jsx';\nimport { connect }                from 'Stores/connect';\nimport ContractInfo               from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox                 from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock               from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    barrier_count,\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary green'\n                has_effect\n                text={localize('Purchase')}\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n                wrapperClassName='submit-section'\n            />\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='purchase-option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader />\n                        }\n                        <ContractInfo\n                            barrier_count={barrier_count}\n                            contract_title={trade_types[type]}\n                            contract_type={type}\n                            currency={currency}\n                            proposal_info={info}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    barrier_count             : PropTypes.number,\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        barrier_count             : modules.trade.barrier_count,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n    })\n)(TradeParams);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nexport default function CalendarButton({ children, className, is_hidden, label, onClick }) {\n    return (\n        <React.Fragment>\n            { !is_hidden &&\n                <span\n                    type='button'\n                    className={className}\n                    onClick={onClick}\n                >\n                    {label}\n                    {children}\n                </span>\n            }\n        </React.Fragment>\n    );\n}\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n","import {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { localize }              from '_common/localize';\nimport { isSessionAvailable }    from 'Stores/Modules/Trading/Helpers/start_date';\nimport { toMoment }              from 'Utils/Date';\nimport InputField                from './input_field.jsx';\n\nclass TimePickerDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n        this.minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n        this.state    = {\n            is_hour_selected  : false,\n            is_minute_selected: false,\n            last_updated_type : null,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { is_hour_selected, is_minute_selected } = this.state;\n        if (is_hour_selected && is_minute_selected) {\n            this.resetValues();\n            this.props.toggle();\n        }\n        if (!prevProps.className && this.props.className === 'active') {\n            this.resetValues();\n        }\n        if (prevState.last_updated_type !== this.state.last_updated_type && this.state.last_updated_type) {\n            this.setState({ last_updated_type: null });\n        }\n    }\n\n    resetValues() {\n        this.setState({\n            is_hour_selected  : false,\n            is_minute_selected: false,\n        });\n    }\n\n    selectOption = (type, value, is_enabled = true) => {\n        if (is_enabled && this.props.value) {\n            const [ prev_hour, prev_minute ] = this.props.value.split(':');\n            if ((type === 'h' && value !== prev_hour) || (type === 'm' && value !== prev_minute)) {\n                const is_type_selected = type === 'h' ? 'is_hour_selected' : 'is_minute_selected';\n                this.setState({\n                    last_updated_type : type,\n                    [is_type_selected]: true,\n                });\n                this.props.onChange(`${type === 'h' ? value : prev_hour}:${type === 'm' ? value : prev_minute}`);\n            }\n        }\n    };\n\n    clear = (event) => {\n        event.stopPropagation();\n        this.resetValues();\n        this.props.onChange('');\n    };\n\n    render() {\n        const { preClass, value, toggle, start_date, sessions } = this.props;\n        const start_moment       = toMoment(start_date);\n        const start_moment_clone = start_moment.clone().minute(0).second(0);\n        const [ hour, minute ]   = value.split(':');\n        return (\n            <div className={`${preClass}-dropdown ${this.props.className}`}>\n                <div\n                    className={`${preClass}-panel`}\n                    onClick={toggle}\n                >\n                    <span className={value ? '' : 'placeholder'}>{value || localize('Select time')}</span>\n                    {(!('is_clearable' in this.props) || this.props.is_clearable) &&\n                        <span\n                            className={`${preClass}-clear`}\n                            onClick={this.clear}\n                        />\n                    }\n                </div>\n                <div className={`${preClass}-selector`}>\n                    <div\n                        ref={this.saveHourRef}\n                        className={`${preClass}-hours`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                        <div className='list-container'>\n                            {this.hours.map((h, key) => {\n                                start_moment_clone.hour(h);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment, true);\n                                return (\n                                    <div\n                                        className={`list-item${hour === h ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('h', h, is_enabled); }}\n                                    >\n                                        {h}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div\n                        ref={this.saveMinuteRef}\n                        className={`${preClass}-minutes`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                        <div className='list-container'>\n                            {this.minutes.map((mm, key) => {\n                                start_moment_clone.hour(hour).minute(mm);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment);\n                                return (\n                                    <div\n                                        className={`list-item${minute === mm ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('m', mm, is_enabled); }}\n                                    >{mm}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TimePicker extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            value  : '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            is_nativepicker,\n            value,\n            name,\n            is_align_right,\n            placeholder,\n            start_date,\n            sessions,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={`${prefix_class}${this.props.padding ? ' padding' : ''}${this.state.is_open ? ' active' : ''}`}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={`${prefix_class}-input ${this.state.is_open ? 'active' : ''}`}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <TimePickerDropdown\n                                    className={`${this.state.is_open ? 'active' : ''}${is_align_right ? ' from-right' : '' }`}\n                                    toggle={this.toggleDropDown}\n                                    onChange={this.handleChange}\n                                    preClass={prefix_class}\n                                    start_date={start_date}\n                                    value={value}\n                                    sessions={sessions}\n                                    is_clearable={this.props.is_clearable}\n                                />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    is_align_right : PropTypes.bool,\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.number,\n    value          : PropTypes.string,\n};\n\nTimePickerDropdown.propTypes = {\n    className   : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    onChange    : PropTypes.func,\n    preClass    : PropTypes.string,\n    sessions    : MobxPropTypes.arrayOrObservableArray,\n    start_date  : PropTypes.number,\n    toggle      : PropTypes.func,\n    value       : PropTypes.string,\n    value_split : PropTypes.bool,\n};\n\nexport default observer(TimePicker);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","export default from './toast.jsx';\nexport * from './constants.js';\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <ToggleButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst ToggleButton = ({ style, toggled }) => {\n    const toggle_style = style || 'toggle-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nToggleButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default ToggleButton;\n","export * from './icon_logout.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst InkBar = ({ left, width }) => {\n    const inkbar_style = {\n        left,\n        width,\n    };\n\n    return (\n        <span style={inkbar_style} className='inkbar' />\n    );\n};\n\nInkBar.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { InkBar };\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <IconPortfolio className='portfolio-empty__icon' />\n        <span className='portfolio-empty__text'>{localize('No open positions.')}</span>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","export default from './date_picker.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","var map = {\n\t\"./ja\": 219,\n\t\"./ja.js\": 219\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 489;","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport OutdatedBrowser      from 'Services/outdated_browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base_store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            id !== this.loginid &&\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi;\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .filter(loginid => !!this.accounts[loginid].is_virtual)\n            .reduce(loginid => loginid);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid      = LocalStore.get('active_loginid');\n        this.accounts     = LocalStore.getObject(storage_key);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.switched     = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = ['ACH'];\n    const language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }                                                                                                                                                 from './Helpers/chart_barriers';\nimport { createChartMarkers }                                                                                                                                                 from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    const moment_obj = epochToMoment(value);\n    return moment_obj.isValid() ? moment_obj : moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nconst setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time.split(':');\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => moment(date || undefined, date_format).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = moment(date).utc().diff(moment().utc(), 'days');\n    return (!date || diff < 0) ? '' : diff + 1;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^(\\d{1,2}):(\\d{2})(:00)?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String} date_str date\n */\nexport const isDateValid = date_str => typeof date_str === 'string' && moment(date_str).isValid();\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            if (this.data.length === 0) {\n                resolve(this.initializePortfolio());\n            }\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format_response';\nimport BaseStore                        from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                   from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url_helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query_string';\nimport getValidationRules                from './Constants/validation_rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract_type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_allow_equal             = false;\n    @observable is_equal_checked           = 0;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '09:40';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => [\n                this.symbol,\n                this.contract_type,\n                this.duration_unit,\n                this.expiry_type,\n                this.duration_units_list,\n                this.contract_types_list,\n            ],\n            () => {\n                this.changeAllowEquals();\n            },\n            { delay: 500 }\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, checked } = e.target;\n        let { value } = e.target;\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (value === 'is_equal') {\n            if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type)) {\n                if (checked) {\n                    this.is_equal_checked = 1;\n                    value = 'rise_fall_equal';\n                } else {\n                    this.is_equal_checked = 0;\n                    value = 'rise_fall';\n                }\n            }\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        this.requestProposal();\n        e.preventDefault();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)\n        ) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            WS.forgetAll('proposal').then(() => {\n                Object.keys(this.proposal_requests).forEach((type) => {\n                    WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n                });\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type = response.echo_req.contract_type;\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    changeAllowEquals() {\n        const hasCallPutEqual = () => {\n            const up_down_contracts = getPropertyValue(this.contract_types_list, 'Up/Down');\n            return up_down_contracts.some(contract => contract.value === 'rise_fall_equal');\n        };\n        const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n            const contract_list = Object.keys(contract_type_list || {})\n                .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n            \n            const contract_duration_list = contract_list\n                .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n            // Check whether rise fall equal is exists and has the current store duration unit\n            return hasCallPutEqual() ? contract_duration_list\n                .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n                .some(duration => duration.value === duration_unit) : false;\n        };\n        const check_callput_equal_duration = hasDurationForCallPutEqual(this.contract_types_list,\n            this.duration_unit, this.contract_start_type);\n\n        if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type) && (check_callput_equal_duration || this.expiry_type === 'endtime') && hasCallPutEqual()) {\n            this.is_allow_equal = true;\n        } else {\n            this.is_allow_equal = false;\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n}\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low', 'rise_fall_equal'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start_date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract_type';\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n\n    getMethodsList(store, new_state).forEach((fnc) => {\n        extendOrReplace(snapshot, fnc(snapshot));\n    });\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    Duration.onChangeExpiry,\n    StartDate.onChangeStartDate,\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = (store) => {\n    const { contract_type, start_date, duration_unit, expiry_time, expiry_type } = store;\n    let { start_time, expiry_date } = store;\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_date = ContractType.getExpiryDate(expiry_date, start_date, expiry_type);\n    expiry_date           = obj_expiry_date.expiry_date;\n    const obj_expiry_time = ContractType.getExpiryTime(sessions, start_date, start_time, expiry_date, expiry_time);\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n    };\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response) => {\n    const proposal = response.proposal || {};\n    const profit   = (proposal.payout - proposal.ask_price) || 0;\n    const returns  = profit * 100 / (proposal.ask_price || 1);\n\n    return {\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake    : proposal.display_value,\n        payout   : proposal.payout,\n        id       : proposal.id || '',\n        message  : proposal.longcode || response.error.message,\n        has_error: !!response.error,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        const start_date  = toMoment(store.start_date || store.root_store.common.server_time);\n        const is_same_day = expiry_date.isSame(start_date, 'day');\n        const expiry_time = is_same_day ? store.expiry_time : '23:59:59';\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_portfolio_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    constructor() {\n        const local_storage_properties = [\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_portfolio_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('dark'));\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_portfolio_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePortfolioDrawer() { // show and hide Portfolio Drawer\n        this.is_portfolio_drawer_on = !this.is_portfolio_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PortfolioDrawer             from './Components/Elements/PortfolioDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast_message.jsx';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport ThemeWrapper                from './Containers/Layout/theme_wrapper.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <ThemeWrapper>\n                <div id='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PortfolioDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer id='footer'>\n                    <Footer />\n                </footer>\n            </ThemeWrapper>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","export default from './portfolio_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport SimpleBar                      from 'simplebar-react';\nimport { localize }                   from '_common/localize';\nimport { IconClose }                  from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty_portfolio_message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PortfolioDrawerCard            from './portfolio_drawer_card.jsx';\n\nclass PortfolioDrawer extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_portfolio_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PortfolioDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('portfolio-drawer', { 'portfolio-drawer--open': is_portfolio_drawer_on })}>\n                <div className='portfolio-drawer__header'>\n                    <span className='portfolio-drawer__icon-main ic-portfolio' />\n                    <span className='portfolio-drawer__title'>{localize('Portfolio Quick Menu')}</span>\n                    <div\n                        className='portfolio-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconClose />\n                    </div>\n                </div>\n                <div className='portfolio-drawer__body'>\n                    <SimpleBar style={{ height: '100%' }}>\n                        {body_content}\n                    </SimpleBar>\n                </div>\n            </div>\n        );\n    }\n}\n\nPortfolioDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_portfolio_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n        toggleDrawer          : ui.togglePortfolioDrawer,\n    })\n)(PortfolioDrawer);\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='arrow-path' d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='#D2D3DA' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#333' fillRule='nonzero' d='M3.6 8.5L7 12.2a.5.5 0 1 1-.8.6l-4-4.5a.5.5 0 0 1 0-.6l4-4.5a.5.5 0 0 1 .8.6L3.6 7.5h9.9a.5.5 0 1 1 0 1H3.6z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g className='color2-fill' fill='none' fillRule='evenodd' stroke='none' strokeWidth='1'>\n            <g>\n                <path className='color1-stroke color2-fill color3-stroke' fill='none' stroke='#2A3052' d='M1.5 14.5h13a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1h-13a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1z' />\n                <path className='color1-stroke color3-stroke color4-fill portfolio-fix' stroke='#2A3052' d='M5.5 3v-.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V3' />\n                <path className='color1-stroke scale-fix' stroke='#2A3052' strokeLinecap='square' d='M0 8l4.047 2.248a2 2 0 0 0 .971.252h5.964a2 2 0 0 0 .971-.252L16 8' />\n                <path className='color1-stroke' stroke='#2A3052' strokeLinecap='round' d='M6.5 8.5h3' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PortfolioDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink className='portfolio-drawer-card' to={getContractPath(id)}>\n        <React.Fragment>\n            <div className='portfolio-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`portfolio-drawer-card__indicative portfolio-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='portfolio-drawer-card__symbol'>{underlying}</span>\n            <span className='portfolio-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPortfolioDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PortfolioDrawerCard;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M7.234 9.316l5.183-5.193H10.14a1.988 1.988 0 0 1-1.983-1.988h7.662v5.713h-1.983V5.523L10.05 9.316h5.769v1.987H.045V9.316h7.189z' />\n                        <path className='important' fill='#F93' d='M3.425 15.91H.045v-3.387h2.073v1.874l1.87-1.874h2.818z' />\n                    </g>\n                );\n                break;\n            case 'calle':\n            case 'call' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M8.721.162c0 1.13.902 2.03 1.983 2.03h1.848l-7.55 7.731v2.885l8.97-9.185v1.892c0 1.131.901 2.031 1.983 2.031V.138H8.72v.024z' />\n                        <path className='important' fill='#F93' d='M.135 12.808v2.123h2.817l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M3.493.654l5.746 5.723-5.746 5.747c-.766-.789-.789-2.028 0-2.817l1.848-1.848H.045V5.476H5.5L3.493 3.47a1.973 1.973 0 0 1 0-2.816zm3.448 11.808h1.983v3.493H6.94v-3.493zM6.94.18h1.983v1.893H6.94V.18z' />\n                        <path className='important' fill='#F93' d='M15.82 8.563h-4.305l1.848-1.848c.767-.766.767-2.028 0-2.816L10.051 7.21a.844.844 0 0 1 0 1.172l-1.826 1.825 5.138 5.138c.609-.923.474-2.343-.315-3.132l-1.69-1.69h4.44v-1.96h.022z' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M.135 6.49V.158h6.333V6.49H.135zM4.26 2.39H2.366v1.893H4.26V2.389zM9.6 16V9.668h6.332V16H9.6zm4.101-4.124h-1.893v1.893h1.893v-1.893z' />\n                        <path fill='#2A3052' d='M9.6.158h6.332V6.49H9.6V.158zm2.208 4.124h1.893V2.389h-1.893v1.893zM.135 16V9.668h6.333V16H.135zm4.124-4.124H2.366v1.893H4.26v-1.893z' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M3.556 2.231l5.666 5.724L3.556 13.7c-.756-.788-.778-2.028 0-2.816l1.822-1.848H.156V7.054h5.377L3.556 5.048a1.992 1.992 0 0 1 0-2.817zm3.377 10.231H8.89v3.47H6.933v-3.47zm0-12.304H8.89v3.56H6.933V.158z' />\n                        <path className='important' fill='#F93' d='M12.156 2.344c.755.788.755 2.05-.023 2.817l-1.466 1.487L9.289 5.25l2.867-2.907zm0 11.493L9.2 10.817l1.378-1.397 1.578 1.6c.755.788.755 2.05 0 2.817zm-1.223-4.778l1.045-1.082-.911-.923h4.622v2.005h-4.756z' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M11.628 7.827H4.237L7.91 2l3.718 5.827zM7.256 6.155h1.352l-.676-1.068-.676 1.068z' />\n                        <path fill='#2A3052' d='M7.46 14.86H.067L3.74 9.035l3.718 5.827zm-4.395-1.67h1.352L3.74 12.12l-.676 1.068zm12.755 1.67H8.428l3.673-5.826 3.719 5.827zm-4.372-1.67H12.8l-.676-1.069-.676 1.068z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.513 12.544L3.02 15.912H.203l4.89-4.746z' />\n                        <path fill='#2A3052' d='M.045 11.034H15.82v1.925H.045v-1.925zM13.837 8.06V5.412l-5.792 5.622V8.3l4.372-4.244H9.69c-1.104 0-1.983-.875-1.983-1.925h8.113v7.875c-1.105 0-1.983-.875-1.983-1.947z' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.603 5.478L3.11 2.088H.293l4.913 4.768z' />\n                        <path fill='#2A3052' d='M.135 5.04H15.91v1.926H.135V5.04zm13.792 4.9c0-1.071.901-1.924 1.983-1.946v7.875H7.797c0-1.05.88-1.925 1.983-1.925h2.727L8.135 9.7V6.966l5.792 5.621V9.941z' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M.068.07h15.774V2.1H.068V.07zm13.769 8.007c0-1.13.878-2.03 1.983-2.054v6.646H9.33c0-1.107.878-2.03 1.983-2.03h1.104L9.059 7.2l-5.363 5.515V9.831l5.363-5.516 4.778 4.893V8.077z' />\n                        <path className='important' fill='#F93' d='M.068 12.692v2.123h1.6l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M11.989 2.1h1.983V.07h1.96V2.1h-1.938v7.408c-1.081 0-1.983-.9-1.983-2.031V5.585l-6.94 7.107V9.785l5.52-5.654H8.745c-1.082 0-1.983-.9-1.983-2.031H.158V.07h11.83V2.1z' />\n                        <path className='important' fill='#F93' d='M.158 12.692v2.123H3.02l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M10.14 8.706l3.787 3.794v-2.326h1.983v5.713H8.248c0-1.084.879-1.987 1.983-1.987h2.276L7.324 8.706H.135V6.72H15.91v1.987h-5.77z' />\n                        <path className='important' fill='#F93' d='M3.515 2.113H.135V5.5h2.073V3.626L4.078 5.5h2.818z' />\n                    </g>\n                );\n                break;\n            case 'pute':\n            case 'put' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M8.631 14.862c0-1.131.901-2.031 1.983-2.031h1.848L4.912 5.1V2.215l8.97 9.185V9.508c0-1.131.901-2.031 1.983-2.031v7.408H8.63v-.023z' />\n                        <path className='important' fill='#F93' d='M.045 2.215V.092h2.817l2.05 2.123z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export default from './Containers/trade.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui_loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container notice-msg'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <fieldset className='trade-types'>\n                    <ContractType />\n                </fieldset>\n                <TradeParams />\n                <div className='purchase-wrapper'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open: false,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        }\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    }\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n                tabIndex='0'\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                    />\n                </ContractTypeDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='calle'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='pute'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleSelect: PropTypes.func,\n    list        : MobxPropTypes.objectOrObservableObject,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\nimport Tooltip                        from 'App/Components/Elements/tooltip.jsx';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        (contract.value !== 'rise_fall_equal') &&\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={() => handleSelect(contract)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n            <Tooltip\n                alignment='left'\n                icon='info'\n            />\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts   : MobxPropTypes.arrayOrObservableArray,\n    handleSelect: PropTypes.func,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    }, popconfirm_element)\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\n\nconst ContractInfo = ({\n    barrier_count,\n    contract_title,\n    contract_type,\n    currency,\n    proposal_info,\n}) => {\n    const icon_type = `${contract_type}${/^(call|put)$/i.test(contract_type) && barrier_count > 0 ? '_barrier' : ''}`.toLowerCase();\n\n    return (\n        <div className='box'>\n            <div className='left-column'>\n                <div className='type-wrapper'>\n                    <IconTradeType type={icon_type} className='type' />\n                </div>\n                <h4 className='trade-type'>{contract_title}</h4>\n            </div>\n            {(proposal_info.has_error || !proposal_info.id) ?\n                <div className={proposal_info.has_error ? 'error-info-wrapper' : ''}>\n                    <span>{proposal_info.message}</span>\n                </div>\n                :\n                <div className='purchase-info-wrapper'>\n                    <span className='purchase-tooltip'>\n                        <Tooltip alignment='left' icon='info' message={proposal_info.message} />\n                    </span>\n                    <div className='info-wrapper'>\n                        <div>{localize('Stake')}:</div>\n                        <div><Money amount={proposal_info.stake} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Payout')}:</div>\n                        <div><Money amount={proposal_info.payout} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Net Profit')}:</div>\n                        <div><Money amount={proposal_info.profit} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Return')}:</div>\n                        <div>{proposal_info.returns}</div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nContractInfo.propTypes = {\n    barrier_count : PropTypes.number,\n    contract_title: PropTypes.string,\n    contract_type : PropTypes.string,\n    currency      : PropTypes.string,\n    proposal_info : PropTypes.object,\n};\n\nexport default ContractInfo;\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-error'>\n            <div className='close-btn-container' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-result-wrapper'>\n        <div>\n            <strong>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='label'>{localize('Buy Price')}:</span>\n            <span className='buy-price'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Payout')}:</span>\n            <span className='payout'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-error-wrapper'>\n        <span className='info-text'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a href='javascript:;'><span className='info-text'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-lock-container'>\n        <div className='lock-container'>\n            <IconLock className='ic-lock' />\n        </div>\n        <h4>{localize('Purchase Locked')}</h4>\n        <Button\n            className='flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/duration.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\nimport StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { localize }              from '_common/localize';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/input_field.jsx';\nimport AllowEquals               from './allow_equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_allow_equal,\n    is_equal_checked,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames('amount-container', {\n        'three-columns': !is_single_currency,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Invest Amount')}\n            icon='invest-amount'\n        >\n            <div className={amount_container_class}>\n                <Dropdown\n                    list={basis_list}\n                    value={basis}\n                    name='basis'\n                    onChange={onChange}\n                    is_nativepicker={is_nativepicker}\n                />\n                {!is_single_currency &&\n                    <Dropdown\n                        list={currencies_list}\n                        value={currency}\n                        name='currency'\n                        onChange={onChange}\n                        is_nativepicker={is_nativepicker}\n                    />\n                }\n                <InputField\n                    error_messages={validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={is_single_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n            <AllowEquals is_allow_equal={is_allow_equal} onChange={onChange} checked={is_equal_checked} />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_allow_equal    : PropTypes.bool,\n    is_equal_checked  : PropTypes.number,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport SimpleBar         from 'simplebar-react';\nimport { IconArrow }     from 'Assets/Common';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex,\n}  from './helpers';\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleVisibility   = this.handleVisibility.bind(this);\n        this.handleSelect       = this.handleSelect.bind(this);\n        this.setWrapperRef      = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.state = {\n            is_list_visible: false,\n            curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect(item) {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    onKeyPressed = (event) => {\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    setWrapperRef(node) {\n        this.wrapper_ref = node;\n    }\n\n    scrollToggle(state) {\n        this.is_open = state;\n        // Used to disable y-scroll on body - disabled in this component for now\n        // document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n            this.scrollToggle(this.state.is_list_visible);\n        }\n    }\n\n    handleVisibility() {\n        this.setState({ is_list_visible: !this.state.is_list_visible });\n        this.scrollToggle(!this.state.is_list_visible);\n    }\n\n    render() {\n        // TODO: Fix list not being populated in native picker dropdown before re-enabling\n        // if (this.props.is_nativepicker) {\n        //     return (\n        //         <NativeSelect\n        //             name={this.props.name}\n        //             value={this.props.value}\n        //             list={this.props.list}\n        //             onChange={this.props.onChange}\n        //         />\n        //     );\n        // }\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={`dropdown-container ${this.props.className ? this.props.className : ''} ${this.state.is_list_visible ? 'show' : ''}`}\n            >\n                <div\n                    className={`dropdown-display ${this.state.is_list_visible ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                    tabIndex='0'\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                <IconArrow className='select-arrow' />\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames='dropdown-list'\n                    unmountOnExit\n                >\n                    <div className='dropdown-list'>\n                        <div className='list-container'>\n                            <SimpleBar style={{ 'height': '100%' }}>\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list-label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </SimpleBar>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={`list-item ${ value === item.value ? 'selected' : ''} ${highlightedIdx === idx ? 'highlighted' : ''}`}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nconst NativeSelect = ({\n    name,\n    value,\n    list,\n    onChange,\n}) => (\n    <div className='select-wrapper'>\n        <select name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\n// ToDo: Refactor Drop-down.\n// It's now too risky to refactor Dropdown for 'list' and 'value' prop types.\nDropdown.propTypes = {\n    className      : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    list           : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    type    : PropTypes.string,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\n// ToDo: Refactor NativeSelect\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { localize }   from '_common/localize';\nimport Tooltip        from 'App/Components/Elements/tooltip.jsx';\nimport InputField     from 'App/Components/Form/input_field.jsx';\n\nconst AllowEquals = ({\n    is_allow_equal,\n    checked,\n    onChange,\n}) => (\n    !!is_allow_equal &&\n        <div className='allow-equals'>\n            <InputField\n                id='allow_equals'\n                name='contract_type'\n                onChange={onChange}\n                value='is_equal'\n                type='checkbox'\n                checked={checked}\n            />\n            <label htmlFor='allow_equals'>{localize('Allow equals')}</label>\n            <Tooltip icon='info' message={localize('Win payout if exit spot is also equal to entry spot.')} alignment='left' />\n        </div>\n);\n\nAllowEquals.propTypes = {\n    checked       : PropTypes.number,\n    is_allow_equal: PropTypes.bool,\n    onChange      : PropTypes.func,\n};\n\nexport default AllowEquals;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/input_field.jsx';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n    return (\n        <Fieldset\n            header={barrier_count > 1 ? localize('Barriers') : localize('Barrier')}\n            icon='barriers'\n        >\n            <InputField\n                type='number'\n                name='barrier_1'\n                value={barrier_1}\n                onChange={onChange}\n                error_messages = {validation_errors.barrier_1 || []}\n                is_float\n                is_signed\n            />\n\n            {barrier_count === 2 &&\n                <InputField\n                    type='number'\n                    name='barrier_2'\n                    value={barrier_2}\n                    onChange={onChange}\n                    error_messages = {validation_errors.barrier_2}\n                    is_float\n                    is_signed\n                />\n            }\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Datepicker               from 'App/Components/Form/DatePicker';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\nimport RangeSlider              from 'App/Components/Form/RangeSlider';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\nimport {\n    convertDurationLimit,\n    convertDurationUnit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport {\n    isTimeValid,\n    toMoment }                  from 'Utils/Date';\n\n/* TODO:\n      1. disable days other than today and tomorrow if start date is forward starting\n*/\n\nconst expiry_list = [\n    { text: localize('Duration'), value: 'duration' },\n];\n\nlet now_date,\n    max_date_duration,\n    min_date_expiry,\n    min_day,\n    max_day,\n    start_date_time,\n    max_duration,\n    min_duration;\n\nconst Duration = ({\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    onChange,\n    is_minimized,\n    is_nativepicker,\n    server_time,\n    sessions,\n    start_date,\n    start_time,\n    validation_errors,\n}) => {\n    if (duration_min_max[contract_expiry_type]) {\n        min_duration = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n        max_duration = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        const moment_now  = toMoment(server_time);\n        const new_min_day = convertDurationUnit(duration_min_max[contract_expiry_type].min, 's', 'd');\n        const new_max_day = convertDurationUnit(duration_min_max[contract_expiry_type].max, 's', 'd');\n        if (!now_date || moment_now.date() !== now_date.date() || (duration_unit === 'd' && (min_day !== new_min_day || max_day !== new_max_day))) {\n            if (duration_unit === 'd') {\n                min_day = new_min_day;\n                max_day = new_max_day;\n            }\n\n            const moment_today = moment_now.clone().startOf('day');\n\n            now_date          = moment_now.clone();\n            max_date_duration = moment_today.clone().add(max_day || 365, 'd');\n            min_date_expiry   = moment_today.clone();\n        }\n    }\n\n    const moment_expiry = toMoment(expiry_date);\n    const is_same_day   = moment_expiry.isSame(toMoment(start_date), 'day');\n    if (is_same_day) {\n        const date_time = toMoment(start_date);\n        if (start_date && isTimeValid(start_time)) {\n            const [ hour, minute ] = start_time.split(':');\n            date_time.hour(hour).minute(minute).second(0).add(5, 'minutes');\n        }\n        // only update start time every five minutes, since time picker shows five minute durations\n        const moment_start_date_time = toMoment(start_date_time);\n        if (!start_date_time || moment_start_date_time.isAfter(date_time) || moment_start_date_time.clone().add(5, 'minutes').isBefore(date_time) ||\n            (moment_start_date_time.minutes() !== date_time.minutes() && date_time.minutes() % 5 === 0)) {\n            start_date_time = date_time.unix();\n        }\n    }\n    if (is_minimized) {\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_same_day,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Trade Duration')}\n            icon='trade-duration'\n        >\n            <Dropdown\n                list={expiry_list}\n                value={expiry_type}\n                name='expiry_type'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n\n            {expiry_type === 'duration' ?\n                <React.Fragment>\n                    <div className='duration-container'>\n                        <Dropdown\n                            list={duration_units_list}\n                            value={duration_unit}\n                            name='duration_unit'\n                            onChange={onChange}\n                            is_nativepicker={is_nativepicker}\n                        />\n                        {\n                            duration_unit === 't' ?\n                                <RangeSlider\n                                    max_value={max_duration}\n                                    min_value={min_duration}\n                                    name='duration'\n                                    ticks={10}\n                                    value={duration}\n                                    onChange={onChange}\n                                />\n                                :\n                                <InputField\n                                    type='number'\n                                    max_value={max_duration}\n                                    min_value={min_duration}\n                                    name='duration'\n                                    value={duration}\n                                    onChange={onChange}\n                                    is_nativepicker={is_nativepicker}\n                                    is_incrementable={true}\n                                    error_messages = {validation_errors.duration || []}\n                                />\n                        }\n                    </div>\n                </React.Fragment> :\n                <React.Fragment>\n                    <div className={endtime_container_class}>\n                        <Datepicker\n                            name='expiry_date'\n                            has_today_btn\n                            min_date={min_date_expiry}\n                            max_date={max_date_duration}\n                            start_date={start_date}\n                            onChange={onChange}\n                            value={expiry_date}\n                            is_read_only\n                            is_clearable={false}\n                            is_nativepicker={is_nativepicker}\n                        />\n                        {is_same_day &&\n                            <TimePicker\n                                onChange={onChange}\n                                is_align_right\n                                name='expiry_time'\n                                value={expiry_time}\n                                placeholder='12:00'\n                                start_date={start_date_time}\n                                sessions={sessions}\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                            />\n                        }\n                    </div>\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\n// ToDo: Refactor Duration.jsx and date_picker.jsx\nDuration.propTypes = {\n    contract_expiry_type: PropTypes.string,\n    duration            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time    : PropTypes.string,\n    expiry_type    : PropTypes.string,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    onChange       : PropTypes.func,\n    server_time    : PropTypes.object,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Duration);\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { IconArrow }   from 'Assets/Common';\nimport {\n    daysFromTodayTo,\n    formatDate,\n    isDateValid,\n    toMoment }         from 'Utils/Date';\nimport DatePickerInput from './date_picker_input.jsx';\nimport Calendar        from '../../Elements/Calendar';\n\nclass DatePicker extends React.PureComponent {\n    state = {\n        value                : '',\n        is_datepicker_visible: false,\n        is_close_btn_visible : false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { value, mode } = this.props;\n        this.updateDatePickerValue(value, mode);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState({ is_datepicker_visible: !this.state.is_datepicker_visible });\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (!('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_close_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_close_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value), 'duration');\n        } else {\n            this.updateDatePickerValue(value);\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        this.updateDatePickerValue(value, this.props.mode);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: '' }, this.updateStore);\n        this.calendar.resetCalendar();\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value, mode) => {\n        this.setState({ value }, this.updateStore);\n\n        // update Calendar\n        const { date_format, start_date } = this.props;\n        const new_date = (mode === 'duration') ? toMoment().add(value, 'days').format(date_format) : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = toMoment(start_date).format(date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='datepicker-display'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker-native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker-native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                <div\n                    className='datepicker-display-wrapper'\n                    onMouseEnter={this.onMouseEnter}\n                    onMouseLeave={this.onMouseLeave}\n                >\n                    <DatePickerInput\n                        class_name='datepicker-display'\n                        mode={this.props.mode}\n                        name={this.props.name}\n                        placeholder={this.props.placeholder}\n                        onClick={this.handleVisibility}\n                        is_read_only={true}\n                        value={this.state.value}\n                    />\n                    <span\n                        className={classNames('picker-calendar-icon', {\n                            show: !this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.handleVisibility}\n                    />\n                    <span\n                        className={classNames('close-circle-icon', {\n                            show: this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.clearDatePickerInput}\n                    />\n                </div>\n                <div\n                    className={classNames('datepicker-calendar', {\n                        show: this.state.is_datepicker_visible,\n                    })}\n                >\n                    <Calendar\n                        ref={node => { this.calendar = node; }}\n                        onSelect={this.onSelectCalendar}\n                        {...this.props}\n                    >\n                        <DatePickerInput\n                            class_name='calendar-input'\n                            mode={this.props.mode}\n                            name={this.props.name}\n                            onChange={this.onChangeInput}\n                            placeholder={this.props.placeholder}\n                            is_read_only={'is_read_only' in this.props ? this.props.is_read_only : false}\n                            value={this.state.value}\n                        />\n                    </Calendar>\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...DatePickerInput.propTypes,\n    ...Calendar.propTypes,\n};\n\nexport default DatePicker;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nexport default function DatePickerInput(props) {\n    return (\n        <input\n            id={props.id}\n            name={props.name}\n            className={props.class_name}\n            readOnly={props.is_read_only}\n            placeholder={props.placeholder\n                || (props.mode === 'duration' ? localize('Select a duration') : localize('Select date'))}\n            onChange={props.onChange}\n            onClick={props.onClick}\n            value={props.value || ''}\n        />\n    );\n}\n\nDatePickerInput.propTypes = {\n    class_name  : PropTypes.string,\n    id          : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    is_read_only: PropTypes.bool,\n    mode        : PropTypes.string,\n    name        : PropTypes.string,\n    onChange    : PropTypes.func,\n    onClick     : PropTypes.func,\n    placeholder : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number, // duration\n        PropTypes.string, // date\n    ]),\n};\n","export default from './calendar.jsx';\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { toMoment }   from 'Utils/Date';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\nimport CalendarPanel  from './calendar_panel.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date } = props;\n        const current_date = toMoment(start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: '',           // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    // navigates to next or previous's month/year/decade/century\n    navigators = {\n        nextMonth      : () => { this.navigateTo(1,   'months', true); },\n        previousMonth  : () => { this.navigateTo(1,   'months', false); },\n        nextYear       : () => { this.navigateTo(1,   'years',  true); },\n        previousYear   : () => { this.navigateTo(1,   'years',  false); },\n        nextDecade     : () => { this.navigateTo(10,  'years',  true); },\n        previousDecade : () => { this.navigateTo(10,  'years',  false); },\n        nextCentury    : () => { this.navigateTo(100, 'years',  true); },\n        previousCentury: () => { this.navigateTo(100, 'years',  false); },\n    };\n\n    // selects a day, a month, a year, or a decade\n    panelSelectors = {\n        date  : (e, is_disabled) => { this.updateSelectedDate(e, is_disabled); },\n        month : (e) => { this.updateSelected(e, 'month'); },\n        year  : (e) => { this.updateSelected(e, 'year'); },\n        decade: (e) => { this.updateSelected(e, 'decade'); },\n    };\n\n    // sets Calendar active view\n    calendarViews = {\n        date  : () => { this.setState({ calendar_view: 'date'   }); },\n        month : () => { this.setState({ calendar_view: 'month'  }); },\n        year  : () => { this.setState({ calendar_view: 'year'   }); },\n        decade: () => { this.setState({ calendar_view: 'decade' }); },\n    };\n\n    navigateTo = (value, unit, is_add) => {\n        const { date_format, max_date, min_date } = this.props;\n\n        let new_date = toMoment(this.state.calendar_date)[is_add ? 'add' : 'subtract'](value, unit).format(date_format);\n\n        if (unit === 'months' && this.isPeriodDisabled(new_date, 'month')) return;\n\n        if (unit === 'years'  && this.isPeriodDisabled(new_date, 'years')) {\n            new_date = is_add ? max_date : min_date;\n        }\n\n        this.setState({ calendar_date: toMoment(new_date).format(date_format) }); // formatted date\n    };\n\n    updateSelectedDate = (e, is_disabled) => {\n        if (is_disabled) {\n            return;\n        }\n\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).startOf(unit);\n        const end_of_period   = toMoment(date).endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { children, date_format, footer, has_today_btn, id, max_date, min_date, start_date } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div id={id} className='calendar' value={selected_date}>\n                { children }\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    onClick={this.navigators}\n                    onSelect={this.calendarViews}\n                    calendar_view={calendar_view}\n                />\n                <CalendarPanel\n                    calendar_date={calendar_date}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    max_date={max_date}\n                    min_date={min_date}\n                    start_date={start_date}\n                    onClick={this.panelSelectors}\n                    selected_date={selected_date}\n                    calendar_view={calendar_view}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    onClick={this.setToday}\n                    has_today_btn={has_today_btn}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment().format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    children       : PropTypes.object,\n    date_format    : PropTypes.string,\n    footer         : PropTypes.string,\n    has_today_btn  : PropTypes.bool,\n    id             : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    max_date       : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onSelect  : PropTypes.func,\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarFooter({ footer, has_today_btn, onClick }) {\n    return (\n        <div className='calendar-footer'>\n            { footer && <span className='calendar-footer-extra'>{footer}</span> }\n            { has_today_btn &&\n                <CalendarButton className='calendar-footer-btn'>\n                    <a role='button' onClick={onClick}>{localize('Today')}</a>\n                </CalendarButton>\n            }\n        </div>\n    );\n}\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { toMoment }   from 'Utils/Date';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarHeader({ calendar_date, isPeriodDisabled, onClick, onSelect, calendar_view }) {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    return (\n        <div className='calendar-header'>\n            <CalendarButton\n                className={classNames('calendar-prev-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    (is_date_view || is_month_view) && onClick.previousYear())\n                    || (is_year_view   && onClick.previousDecade())\n                    || (is_decade_view && onClick.previousCentury()\n                    )\n                }\n            />\n            <CalendarButton\n                className={classNames('calendar-prev-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.previousMonth}\n            />\n\n            <div className='calendar-select'>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar-select-month-btn'\n                        is_hidden={!is_date_view}\n                        label={moment_date.format('MMM')}\n                        onClick={onSelect.month}\n                    />\n                }\n                <CalendarButton\n                    className='calendar-select-year-btn'\n                    onClick={() => ((is_date_view || is_month_view) ? onSelect.year() : onSelect.decade())}\n                >\n                    { (is_date_view || is_month_view) && moment_date.year() }\n                    { is_year_view   && `${moment_date.clone().subtract(1, 'years').year()}-${moment_date.clone().add(10, 'years').year()}`  }\n                    { is_decade_view && `${moment_date.clone().subtract(10, 'years').year()}-${moment_date.clone().add(109, 'years').year()}` }\n                </CalendarButton>\n            </div>\n\n            <CalendarButton\n                className={classNames('calendar-next-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.nextMonth}\n            />\n            <CalendarButton\n                className={classNames('calendar-next-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    ((is_date_view || is_month_view) && onClick.nextYear())\n                    || (is_year_view   && onClick.nextDecade())\n                    || (is_decade_view && onClick.nextCentury())\n                )}\n            />\n        </div>\n    );\n}\n\nCalendarHeader.propTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    onClick         : PropTypes.object,\n    onSelect        : PropTypes.object,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nexport default function CalendarPanel(props) {\n    const calendar_panel = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <div className='calendar-panel'>\n            { calendar_panel[props.calendar_view] }\n        </div>\n    );\n}\n\nCalendarPanel.propTypes = {\n    calendar_view: PropTypes.string,\n};\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { padLeft }        from '_common/string_util';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\n\nconst getDays = ({ calendar_date, date_format, max_date, min_date, start_date, onClick, selected_date }) => {\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const first_day          = moment_month_start.day();\n    const last_day           = moment_month_end.day();\n    const moment_min_date    = toMoment(min_date);\n    const moment_max_date    = toMoment(max_date);\n    const moment_selected    = toMoment(selected_date);\n\n    for (let i = first_day; i > 0; i--) {\n        dates.push(moment_month_start.clone().subtract(i, 'day').format(date_format));\n    }\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    for (let i = 1; i <= 6 - last_day; i++) {\n        dates.push(moment_month_end.clone().add(i, 'day').format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n    dates.map((date) => {\n        const moment_date = toMoment(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n        const is_disabled = moment_date.isBefore(moment_min_date) || moment_date.isAfter(moment_max_date) ||\n            // for forward starting accounts, only show same day as start date and the day after\n            (start_date && (moment_date.isBefore(moment_start_date) || moment_date.isAfter(moment_start_date.clone().add(1, 'day'))));\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar-date', {\n                    active  : is_active && !is_disabled,\n                    today   : is_today,\n                    disabled: is_disabled,\n                })}\n                onClick={(e) => { onClick.date(e, is_disabled); }}\n                data-date={date}\n            >\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nconst week_headers = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar-date-panel'>\n            {week_headers.map((item, idx) => (<span key={idx} className='calendar-date-header'>{item}</span>))}\n            {days}\n        </div>\n    );\n};\n\nCalendarDays.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { localize }       from '_common/localize';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\n\nconst getMonthHeaders = () => ({\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n});\n\nexport const CalendarMonths = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const moment_date    = toMoment(calendar_date);\n    const selected_month = toMoment(selected_date).month();\n    const month_headers  = getMonthHeaders();\n\n    return (\n        <div className='calendar-month-panel'>\n            {Object.keys(month_headers).map((month, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-month', {\n                        active  : idx === selected_month,\n                        disabled: isPeriodDisabled(moment_date.month(month), 'month'),\n                    })}\n                    onClick={onClick.month}\n                    data-month={idx}\n                >\n                    {month_headers[month]}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarYears = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = toMoment(selected_date).year();\n    const moment_date   = toMoment(calendar_date);\n    const current_year  = moment_date.year();\n    const years         = [];\n    for (let year = current_year - 1; year < current_year + 11; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar-year-panel'>\n            {years.map((year, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-year', {\n                        disabled: isPeriodDisabled(moment_date.year(year), 'year'),\n                        active  : year === selected_year,\n                    })}\n                    onClick={onClick.year}\n                    data-year={year}\n                >\n                    {year}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport React              from 'react';\nimport { toMoment }       from 'Utils/Date';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarDecades = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = toMoment(selected_date).year();\n    const moment_date   = toMoment(calendar_date);\n\n    const decades = [];\n    let min_year  = moment_date.year() - 10;\n    for (let i = 0; i < 12; i++) {\n        const max_year = min_year + 9;\n        const range    = `${min_year}-${max_year}`;\n        decades.push(range);\n        min_year = max_year + 1;\n    }\n\n    return (\n        <div className='calendar-decade-panel'>\n            {decades.map((range, idx) => {\n                const [start_year, end_year] = range.split('-');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar-decade', {\n                            disabled: isPeriodDisabled(moment_date.year(start_year), 'year') && isPeriodDisabled(moment_date.year(end_year), 'year'),\n                            active  : start_year === selected_year,\n                        })}\n                        onClick={onClick.decade}\n                        data-decade={range}\n                    >\n                        {range}\n                    </span>\n                );\n            })}\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CalendarPanelTypes };\n","export default from './range_slider.jsx';\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport TickSteps    from './tick_steps.jsx';\n\nconst RangeSlider = ({\n    className,\n    ticks,\n    max_value,\n    min_value,\n    name,\n    value,\n    onChange,\n}) => {\n\n    const handleChange = (e) => {\n        if (e.target.value !== value) {\n            onChange({ target: { name, value: e.target.value } });\n        }\n    };\n\n    const handleClick = (e, index) => {\n        if (index !== value) {\n            onChange({ target: { name, value: index } });\n        }\n    };\n\n    const first_tick = ticks - (ticks - 1);\n\n    const is_error = ((value < min_value) || (value > max_value)) ? 'error' : '';\n\n    return (\n        <div className={classNames('range-slider', className, { 'error': is_error })}>\n            <label htmlFor='range'>\n                <input\n                    id='range'\n                    className='range-slider__track'\n                    type='range'\n                    min={first_tick}\n                    max={ticks}\n                    min_value={min_value}\n                    max_value={max_value}\n                    name={name}\n                    steps='1'\n                    onChange={handleChange}\n                    tabIndex='0'\n                    value={value}\n                />\n                <div className='ticks'>\n                    <TickSteps\n                        value={value}\n                        ticks={ticks}\n                        onClick={handleClick}\n                    />\n                </div>\n                {/* Calculate line width based on active value and size of range thumb */}\n                <div\n                    className='range-slider__line'\n                    style={{ width: `calc(${value * 10}% - ${value < 4 ? '0.8rem' : '0.5rem'})` }}\n                />\n            </label>\n            <div className='range-slider__caption'>\n                <span>\n                    {first_tick}\n                </span>\n                {\n                    !!value &&\n                    <span>\n                        {localize('[_1] Ticks', value || '')}\n                    </span>\n                }\n                <span>\n                    {ticks}\n                </span>\n            </div>\n        </div>\n    );\n};\n\nRangeSlider.propTypes = {\n    className : PropTypes.string,\n    first_tick: PropTypes.number,\n    max_value : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    min_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(RangeSlider);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst TickSteps = ({ value, ticks, onClick }) => {\n    const arr_ticks = [...Array(ticks).keys()];\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('ticks__step', {\n                        'ticks__step--active': (idx + 1) === parseInt(value),\n                        'ticks__step--marked': (idx + 1) < parseInt(value),\n                    })}\n                    onClick={(e) => onClick(e, idx + 1)}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    onClick: PropTypes.func,\n    ticks  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default TickSteps;\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number_selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={`number-selector__selection${selected_number === i ? ' selected' : ''}`}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","import {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\n\n/* TODO:\n    1. update sessions list when the selected one doesn’t have any enabled time\n*/\n\nconst StartDate = ({\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    sessions,\n    start_date,\n    start_dates_list,\n    start_time,\n    validation_errors,\n}) => {\n    // Number(0) refers to 'now'\n    const is_today = start_date === Number(0);\n    let current_date_config = '';\n    if (!is_today) {\n        current_date_config = start_dates_list.find(o => o.value === +start_date) || {};\n    }\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized start-date'>\n                <span className='icon start-time' />\n                {is_today ? localize('Now') : `${current_date_config.text}\\n${start_time}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Start time')}\n            icon='start-time'\n        >\n            <Dropdown\n                name='start_date'\n                value={start_date}\n                list={start_dates_list}\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n            {(!is_today && start_time) &&\n                <TimePicker\n                    onChange={onChange}\n                    is_align_right\n                    name='start_time'\n                    value={start_time}\n                    placeholder='12:00'\n                    start_date={start_date}\n                    sessions={sessions}\n                    is_clearable={false}\n                    is_nativepicker={is_nativepicker}\n                    validation_errors={validation_errors.start_time}\n                />\n            }\n        </Fieldset>\n    );\n};\n\nStartDate.propTypes = {\n    is_minimized     : PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    onChange         : PropTypes.func,\n    sessions         : MobxPropTypes.arrayOrObservableArray,\n    start_date       : PropTypes.number,\n    start_dates_list : MobxPropTypes.arrayOrObservableArray,\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(StartDate);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-wrapper'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\nimport Localize     from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error-container'>\n            <IconError type={type} />\n            <p>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport CloseButton from './close_button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }        from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                <span className={`toast__body__icon--${data.type.toLowerCase()}`} />\n            </div>\n            <div className='toast__body__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__body__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default CloseButton;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({ children, is_portfolio_drawer_on }) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-portfolio-drawer': is_portfolio_drawer_on,\n        })}\n    >\n        {children}\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_portfolio_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePortfolio,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_logged_in,\n    is_portfolio_drawer_on,\n    is_language_dialog_visible,\n    is_settings_dialog_on,\n    network_status,\n    toggleSettingsDialog,\n    togglePortfolioDrawer,\n}) => (\n    <React.Fragment>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            {\n                is_logged_in &&\n                <TogglePortfolio\n                    is_portfolio_drawer_on={is_portfolio_drawer_on}\n                    togglePortfolioDrawer={togglePortfolioDrawer}\n                />\n            }\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_settings_visible={is_settings_dialog_on}\n                is_language_visible={is_language_dialog_visible}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePortfolioDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        network_status            : common.network_status,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_portfolio.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconQuickPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 12'>\n        <path className='color1-fill color3-fill' fill='#2A3052' fillRule='evenodd' d='M1 0h14c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1H1a1 1 0 0 1-1-1V1c0-.6.4-1 1-1zm0 1v10h5V1H1zm6 0v10h8V1H7zm1.5 1.5a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconQuickPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuickPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","import classNames             from 'classnames';\nimport PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { IconQuickPortfolio } from 'Assets/Footer';\n\nconst TogglePortfolio = ({\n    is_portfolio_drawer_on,\n    togglePortfolioDrawer,\n}) => {\n    const toggle_portfolio_class = classNames('ic-portfolio', {\n        'active': is_portfolio_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_portfolio_class}\n            onClick={togglePortfolioDrawer}\n        >\n            <IconQuickPortfolio className='footer-icon' />\n        </a>\n    );\n};\n\nTogglePortfolio.propTypes = {\n    is_portfolio_drawer_on: PropTypes.bool,\n    togglePortfolioDrawer : PropTypes.func,\n};\n\nexport { TogglePortfolio };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { withRouter }           from 'react-router';\nimport { formatMoney }          from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    LoginButton,\n    InstallPWAButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    ToggleNotificationsDrawer } from 'App/Components/Layout/Header';\nimport header_links             from 'App/Constants/header_links';\nimport { connect }              from 'Stores/connect';\n\nconst Header = ({\n    account_type,\n    balance,\n    can_upgrade,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-balance-container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    account_type={account_type}\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                            </React.Fragment>\n                            :\n                            <LoginButton />\n                        }\n                    </div>\n                </div>\n                <ToggleNotificationsDrawer />\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    account_type             : PropTypes.string,\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool, // TODO: add dark theme handler\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func, // TODO: add click handler\n    pwa_prompt_event         : PropTypes.object,\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        account_type             : client.account_title,\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","export * from './account_info.jsx';\nexport * from './install_pwa_button.jsx';\nexport * from './login_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport Localize            from 'App/Components/Elements/localize.jsx';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    onClickUpgrade,\n    toggleDialog,\n    account_type,\n}) => (\n    <div className='acc-balance'>\n        <div className='acc-switcher-container'>\n            <div className={classNames('acc-info', { 'show': is_dialog_on })} onClick={toggleDialog}>\n                <p className='acc-balance-type'>\n                    <Localize str={`${account_type} Account`} />\n                </p>\n                <p className='acc-balance-id'>{loginid}</p>\n                <IconArrow className='select-arrow' />\n            </div>\n            <CSSTransition\n                in={is_dialog_on}\n                timeout={400}\n                classNames='acc-switcher-wrapper'\n                unmountOnExit\n            >\n                <div className='acc-switcher-wrapper'>\n                    <AccountSwitcher\n                        is_visible={is_dialog_on}\n                        toggle={toggleDialog}\n                        is_upgrade_enabled={is_upgrade_enabled}\n                        onClickUpgrade={onClickUpgrade}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n        {typeof balance !== 'undefined' &&\n        <p className='acc-balance-amount'>\n            <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n            {balance}\n        </p>\n        }\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account_switcher.jsx';\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { UpgradeButton } from 'App/Components/Elements/AccountSwitcher/upgrade_button.jsx';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services/index';\nimport { connect }       from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n\n        return (\n            <div className='acc-switcher-list' ref={this.setWrapperRef}>\n                {(this.props.account_list.length > 0) &&\n                this.props.account_list.map((account) => (\n                    <React.Fragment key={account.loginid}>\n                        <div\n                            className={classNames('acc-switcher-account', account.icon)}\n                            onClick={this.doSwitch.bind(this, account.loginid)}\n                        >\n                            <span className='acc-switcher-id'>{account.loginid}</span>\n                            <span className='acc-switcher-type'>{account.title}</span>\n                        </div>\n                    </React.Fragment>\n                ))}\n                {this.props.is_upgrade_enabled &&\n                <div className='acc-button'>\n                    <UpgradeButton onClick={this.props.onClickUpgrade} />\n                </div>\n                }\n                <div className='acc-logout' onClick={requestLogout}>\n                    <span className='acc-logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list      : PropTypes.array,\n    is_logged_in      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_visible        : PropTypes.bool,\n    onClickUpgrade    : PropTypes.func,\n    toggle            : PropTypes.func,\n};\n\nconst account_switcher = connect(\n    ({ client }) => ({\n        account_list : client.account_list,\n        is_logged_in : client.is_logged_in,\n        switchAccount: client.switchAccount,\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className='primary orange'\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport InkBarDiv      from '../../Elements/InkBar';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <InkBarDiv className='menu-links'>\n            {items.map((item, idx) => (\n                <BinaryLink key={idx} to={item.link_to}>\n                    <span title={item.text}>{item.icon}{item.text}</span>\n                </BinaryLink>\n            ))}\n        </InkBarDiv>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","export default from './inkbar_div.jsx';\nexport *       from './inkbar.jsx';\n","import classnames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { InkBar } from './inkbar.jsx';\n\nclass InkBarDiv extends React.Component {\n    constructor(props) {\n        super(props);\n        window.addEventListener('resize', this.updateInkbarPosition);\n        this.state = {\n            left : 0,\n            width: 0,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.node) return;\n        this.updateInkbarPosition(this.node.querySelector('a[class=\"active\"]'));\n    }\n\n    componentDidUpdate() {\n        const active_el = this.node.querySelector('a[class=\"active\"]');\n        if (active_el) {\n            this.updateInkbarPosition(active_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.clearInkBar(); // clear InkBar when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        window.removeEventListener('resize', this.updateInkbarPosition);\n        this.clearInkBar();\n    }\n\n    onClick = (e) => {\n        if (!e.target) return;\n        this.updateInkbarPosition(e.target.closest('a'));\n    };\n\n    clearInkBar = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateInkbarPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('has-inkbar', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: this.onClick,\n                        })\n                    ))\n                }\n                <InkBar left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nInkBarDiv.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n};\n\nexport default InkBarDiv;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn is-link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes_config';\nimport UILoader           from 'App/Components/Elements/ui_loader.jsx';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <ToggleButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_portfolio_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePortfolioDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer-footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer-icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_portfolio_drawer_on) {\n                        togglePortfolioDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePortfolioDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","export * from './notifications.jsx';\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconBell }        from 'Assets/Header/NavBar';\nimport { DrawerItem }      from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <div className='no-notifications-container'>\n                    <div className='notification-message'>\n                        <div className='bell-icon'>\n                            <IconBell />\n                        </div>\n                        <div>\n                            <h4>{localize('No Notifications')}</h4>\n                            <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n                        </div>\n                    </div>\n                </div>\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    'list': PropTypes.object,\n};\n\nexport { Notifications };\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconPortfolio,\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        icon   : <IconPortfolio className='ic-header__portfolio' />,\n        text   : localize('Portfolio'),\n        link_to: routes.portfolio,\n    },\n    {\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Statement'),\n        link_to: routes.statement,\n    },\n    // { icon: <IconCashier />,   text: localize('Cashier') },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst ThemeWrapper = ({ children, is_dark_theme }) => {\n    const theme_wrapper_class = classNames('theme-wrapper', {\n        dark : is_dark_theme,\n        light: !is_dark_theme,\n    });\n    return (\n        <div id='theme_wrapper' className={theme_wrapper_class}>\n            {children}\n        </div>\n    );\n};\n\nThemeWrapper.propTypes = {\n    children     : PropTypes.node,\n    is_dark_theme: PropTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_dark_theme: ui.is_dark_mode_on,\n    }),\n)(ThemeWrapper));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export default from './denial_of_service.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{children}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default        from './register_service_worker';\nexport { unregister } from './register_service_worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"sourceRoot":""}